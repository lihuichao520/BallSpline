//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// _HEADER
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//
// - 3D Model -
//
// 
//
// Any modification, use and/or distribution of this file
// in binary or source code format is strictly prohibited
// without our group's permission.
//
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Authors     : WU Zhongke
// Team        : Prof Seah's group
//
// File        : gvBallNurbsSurfacen.cpp
// Description : Ball Nurbs Surface  
//
// Last UpDate :
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Comments :
//
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// Include
#include <cmath>
//#include "stdafx.h"
//#include "gvNurbs.h"
//#include "gvBallNurbsCurve.h"
//#include "gvBallNurbsSurface.h"
#include "conversion.h"
#include "gvTrianglesIndep.h"
//#include <matrix.h>
#include <fstream>
using namespace std;

#define NUMCURVE 100
#define SPLITNUM 200
#define NUMVERTEX 100
#define MAXORDER 10
//#define EPS 0.0001
#ifndef ORDER
#define ORDER 10
#endif

#ifndef NULL
#define NULL 0
#endif

#ifndef NON_NODE_
#define NON_NODE_ 0
#endif

#ifndef FREE_END_
#define FREE_END_ 1
#endif

#ifndef TANGENT_END_
#define TANGENT_END_ 2
#endif

#ifndef CLOSED_
#define CLOSED_ 3
#endif


extern void get2pVector(gvPoint vz, gvPoint *vx, gvPoint* vy);
